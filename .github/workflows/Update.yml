name: 生成自用Apple TV直播列表
 
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/*.yml'
      - 'ChannelList/*.list'
      - 'ChannelLogo/*/*.png'
  schedule:
    - cron: '0 5,17 * * *'  # 每天凌晨1点和下午13点运行 
  watch:
    types: [started]

env:
  TZ: Asia/Shanghai
  TELEGRAM_NOTIFICATION: true
  TELEGRAM_NOTIFICATION_CONTENT: <b>📺 AppleTV直播频道已更新！</b>
  GROUP_NAME_CCTV: 央视频道
  GROUP_NAME_SATT: 卫视频道
  GROUP_NAME_LOCAL: 地方频道
  GROUP_NAME_DIG: 数字频道
  GROUP_NAME_TIYU: 体育频道
  GROUP_NAME_HK: 香港频道
  GROUP_NAME_TW: 台湾频道
  GROUP_NAME_JP: 日本频道
  GROUP_NAME_KR: 韩国频道
  GROUP_NAME_EN: 欧美难道
  # GROUP_NAME_MO: 澳门频道
  
  HKTW_ADD: false
  GET: true

jobs:
  GenerateList:
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: main
        fetch-depth: 0
        lfs: true
        

    - name: 获取当前日期
      id: date
      run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
    

    
    - name: 国内频道
      if: env.GET == 'true'
      run : | 
       wget https://raw.githubusercontent.com/YueChan/Live/main/IPTV.m3u -O $source6.tmp
        # 生成V6临时文件
        awk '
        {
          gsub("\"央视频道","\"'"$GROUP_NAME_CCTV"'");
          if($0~/(tvg-name=\"CCTV|CCTV4K)/) {gsub(/group-title=\".*\"/, "group-title=\"'"$GROUP_NAME_CCTV"'\"")};
          gsub(/CCTV5.\"/,"CCTV5+体育赛事\"");
          gsub("\"电视指南","\"CCTV电视指南");
          gsub(/tvg-name=\"中国教育/,"tvg-name=\"CETV");
          if($0~/NEWTV/) {gsub(",",",NEWTV")};
          if($0~/tvg-name=\"(CCTV|CETV|CGTN)/) {gsub(/group-title=\".*\"/, "group-title=\"'"$GROUP_NAME_CCTV"'\"")};
          if($0~/group-title=\"卫视\"/ && $0!~/tvg-name=\".*卫视\".*tvg-logo/) {gsub("\"卫视","\"'"$GROUP_NAME_LOCAL"'")};
          if($0~/tvg-name=\".*卫视\".*tvg-logo/ || $0~/凤凰/) {gsub(/group-title=\".*\"/, "group-title=\"'"$GROUP_NAME_SATT"'\"")};
          if($0!~/group-title=\"('"$GROUP_NAME_CCTV"'|'"$GROUP_NAME_SATT"'|'"$GROUP_NAME_LOCAL"')\"/) {gsub(/group-title=\".*\"/, "group-title=\"'"$GROUP_NAME_DIG"'\"")};
          print $0;
        }
        ' $source6.tmp>chinav6.tmp
        
        # 生成V6央视卫视
        awk '
        {
          if($0~/\#EXTM3U/) {print $0};
          if($0~/group-title=\"'"$GROUP_NAME_CCTV"'\"/ || $0~/group-title=\"'"$GROUP_NAME_SATT"'\"/) {m=NR; n=NR+1};
          if(m<=NR && NR<=n) {
            print $0;
          };
        }
        ' chinav6.tmp>Source/CCTV.m3u 
        
        # 生成V6地方电视台
        awk '
        {
          if($0~/\#EXTM3U/) {print $0};
          if($0~/group-title=\"'"$GROUP_NAME_LOCAL"'\"/) {m=NR; n=NR+1};
          if(m<=NR && NR<=n) {
            print $0;
          };
        }
        ' chinav6.tmp>IPTV/地方频道.m3u
       
        # 生成V6数字频道
        awk '
        { 
          if($0~/\#EXTM3U/) {print $0};
          if($0~/group-title=\"'"$GROUP_NAME_DIG"'\"/) {m=NR; n=NR+1};
          if(m<=NR && NR<=n) {
            print $0;
          };
        }
        ' chinav6.tmp>Source/Dig.m3u
        
        awk -F'"' '
        {
          info=$0;
          name=$4;
          gsub(/group-title="数字频道.*"/, "group-title=\"'"$GROUP_NAME_DIG"'\"");
          if($0~/\#EXTM3U/) {print $0};
          if(info~/EXTINF/ && info!~/URLARU/) {
            churl="null";
            close("chinav6.tmp");
            cmd="awk '\''/"name"/{getline;print}'\'' chinav6.tmp";
            cmd | getline churl;
            if(churl!="null") {
              print info;
              print churl;
            };
            close(cmd);
          };
        }
        ' ChannelList/Dig.list>IPTV/数字频道.m3u


    - name: 重新排序国内频道并更换透明图标
      run : |
        awk -F'"' '
        {
          info=$0;
          name=$4;
          gsub(/group-title=\"央视.*\"/, "group-title=\"'"$GROUP_NAME_CCTV"'\"");
          gsub(/group-title=\"卫视.*\"/, "group-title=\"'"$GROUP_NAME_SATT"'\"");
          # 到第一个空行为止 if(length(info)==0) {exit};
          if(info~/\#EXIT/) {exit};
          if($0~/\#EXTM3U/) {print $0};
          if(info~/综合/) {
            name="CCTV1\"";
            close("Source/CCTV.m3u");
            cmd="awk '\''/"name"/{getline;print}'\'' Source/CCTV.m3u";
            cmd | getline churl;
            print info;
            print churl;
            close(cmd);
            next;
          };
          if(info~/体育赛事/) {
            name="体育赛事";
            close("Source/CCTV.m3u");
            cmd="awk '\''/"name"/{getline;print}'\'' Source/CCTV.m3u";
            cmd | getline churl;
            print info;
            print churl;
            close(cmd);
            next;
          };
          if(info~/EXTINF/ && info!~/HaveURL/) {
            churl="null";
            close("Source/CCTV.m3u");
            cmd="awk '\''/"name"/{getline;print}'\'' Source/CCTV.m3u";
            cmd | getline churl;
            if(churl!="null") {
              print info;
              print churl;
            };
            close(cmd);
          };
        }
        ' ChannelList/China.list>IPTV/央视卫视.m3u 
        





    - name: 体育频道
      if: env.GET == 'true'
      run: |
        wget https://ghproxy.com/https://raw.githubusercontent.com/youshandefeiyang/IPTV/main/main/IPTV.m3u -O feiyang.tmp
        wget https://raw.githubusercontent.com/YueChan/Live/main/IPTV.m3u -O source6.tmp
        wget https://ghproxy.com/https://raw.githubusercontent.com/YanG-1989/m3u/main/Gather.m3u -O yang.tmp
        cat source6.tmp feiyang.tmp yang.tmp > tiyu.tmp
        awk '
        {
          if($0~/\"online\"|\"timeout\"/) {m=NR; n=NR+1};
          if(m<=NR && NR<=n) {
            gsub(/ \(.*p\)/,"");
            gsub(/\",/,"\" group-title=\"'"$GROUP_NAME_TIYU"'\",");
            print $0;
          };
        }
        ' tiyu.tmp>Source/Tiyu.m3u
        awk -F'"' '
        {
          info=$0;
          name=$4;
          gsub(/group-title="体育频道.*"/, "group-title=\"'"$GROUP_NAME_TIYU"'\"");
          if($0~/\#EXTM3U/) {print $0};
          if(info~/EXTINF/ && info!~/URLARU/) {
            churl="null";
            close("tiyu.tmp");
            cmd="awk '\''/"name"/{getline;print}'\'' tiyu.tmp";
            cmd | getline churl;
            if(churl!="null") {
              print info;
              print churl;
            };
            close(cmd);
          };
        }
        ' ChannelList/Tiyu.list>IPTV/体育频道.m3u

    - name: 香港频道
      if: env.GET == 'true'
      run : |
        wget https://raw.githubusercontent.com/lptv800/lptv800.github.io/master/IPTV.m3u -O hk.tmp
        awk '
        {
          if($0~/\"online\"|\"timeout\"/) {m=NR; n=NR+1};
          if(m<=NR && NR<=n) {
            gsub(/ \(.*p\)/,"");
            gsub(/\",/,"\" group-title=\"'"$GROUP_NAME_HK"'\",");
            print $0;
          };
        }
        ' hk.tmp>Source/Hongkong.m3u
        awk -F'"' '
        {
          info=$0;
          name=$4;
          gsub(/group-title=\"港台频道.*\"/, "group-title=\"'"$GROUP_NAME_HK"'\"");
          if($0~/\#EXTM3U/) {print $0};
          if(info~/EXTINF/ && info!~/URLARU/) {
            churl="null";
            close("hk.tmp");
            cmd="awk '\''/"name"/{getline;print}'\'' hk.tmp";
            cmd | getline churl;
            if(churl!="null") {
              print info;
              print churl;
            };
            close(cmd);
          };
        }
        ' ChannelList/Hongkong.list>IPTV/香港频道.m3u
        
       
        
        
        
    - name: 台湾频道
      if: env.GET == 'true'
      run : |
        wget https://raw.githubusercontent.com/iptv-org/iptv/master/streams/tw.m3u -O tw.tmp
        awk '
        {
          if($0~/\"online\"|\"timeout\"/) {m=NR; n=NR+1};
          if(m<=NR && NR<=n) {
            gsub(/ \(.*p\)/,"");
            gsub(/\",/,"\" group-title=\"'"$GROUP_NAME_TW"'\",");
            print $0;
          };
        }
        ' tw.tmp>Source/Taiwan.m3u
        awk -F'"' '
        {
          info=$0;
          name=$4;
          gsub(/group-title=\"台湾频道.*\"/, "group-title=\"'"$GROUP_NAME_TW"'\"")
          if($0~/\#EXTM3U/) {print $0};
          if(info~/EXTINF/ && info!~/URLARU/) {
            churl="null";
            close("tw.tmp");
            cmd="awk '\''/"name"/{getline;print}'\'' tw.tmp";
            cmd | getline churl;
            if(churl!="null") {
              print info;
              print churl;
            };
            close(cmd);
          };
        }
        ' ChannelList/Taiwan.list>IPTV/台湾频道.m3u
        
        
        
        
    
    - name: 日本频道
                                                                                                 # 检查环境变量 GET 是否设置为 true
      if: env.GET == 'true'
      run : |
        wget https://raw.githubusercontent.com/iptv-org/iptv/master/streams/jp.m3u -O japan.tmp  # 下载日本频道列表，并将其保存为 japan.tmp
        awk '                                                                                    # 对列表进行处理，将频道名称、URL 和分组信息提取出来，并保存为 Source/Japan.m3u
        {
          if($0~/\"online\"|\"timeout\"/) {m=NR; n=NR+1};                                        # 如果当前行包含 "online" 或 "timeout"，则记录该行号
          if(m<=NR && NR<=n) {                                                                   # 如果当前行在记录的行号范围内，则进行处理
            gsub(/ \(.*p\)/,"");                                                                 # 删除括号中的分辨率信息，将 TBS 替换为 TBS TV，添加分组信息，并输出当前行
            gsub(",TBS",",TBS TV");
            gsub(/\",/,"\" group-title=\"'"$GROUP_NAME_JP"'\",");
            print $0;
          };
        }
        ' japan.tmp>Source/Japan.m3u
        awk -F'"' '                                                                                # 遍历 ChannelList/Japan.list 中的每一行，提取出频道名称和 URL，并保存为 日本频道.m3u
        {
          info=$0;                                                                                 # 将当前行保存到变量 info 中
          name=$4;                                                                                 # 提取频道名称，并保存到变量 name 中
          gsub(/group-title=\"日韩频道.*\"/, "group-title=\"'"$GROUP_NAME_JP"'\"");                 # 将分组信息中的 "日韩频道" 替换为环境变量 GROUP_NAME_JP 中的值，并输出 #EXTM3U 行
          if($0~/\#EXTM3U/) {print $0};                                                            # 如果当前行包含 EXTINF，但不包含 URLARU，则说明该行为频道信息，提取出对应 URL，并输出到文件
          if(info~/EXTINF/ && info!~/URLARU/) {
            churl="null";                                                                          # 初始化 churl 变量
            close("japan.tmp");                                                             # 关闭 Source/Japan.m3u 文件，以便重新打开并读取其中的行
            cmd="awk '\''/"name"/{getline;print}'\'' japan.tmp";                            # 构造命令，从 Source/Japan.m3u 中提取与 name 匹配的行
            cmd | getline churl;                                                                   # 执行命令，并将输出保存到 churl 中
            if(churl!="null") {
              print info;                                                                          # 输出当前行
              print churl;                                                                         # 输出对应的 URL
            };
            close(cmd);                                                                            # 关闭命令执行结果
          };
        }
        ' ChannelList/Japan.list>IPTV/日本频道.m3u                                                       # 输出结果到 日本频道.m3u 文件
        
    - name: 韩国频道
      if: env.GET == 'true'
      run : |
        wget https://raw.githubusercontent.com/iptv-org/iptv/master/streams/kr.m3u -O $korea.tmp -O korea.tmp
        awk '
        {
          if($0~/\"online\"|\"timeout\"/) {m=NR; n=NR+1};
          if(m<=NR && NR<=n) {
            gsub(/ \(.*p\)/,"");
            gsub(/\",/,"\" group-title=\"'"$GROUP_NAME_KR"'\",");
            print $0;
          };
        }
        ' korea.tmp>Source/Korea.m3u
        awk -F'"' '
        {
          info=$0;
          name=$4;
          gsub(/group-title=\"日韩频道.*\"/, "group-title=\"'"$GROUP_NAME_KR"'\"");
          if($0~/\#EXTM3U/) {print $0};
          if(info~/EXTINF/ && info!~/URLARU/) {
            churl="null";
            close("korea.tmp");
            cmd="awk '\''/"name"/{getline;print}'\'' korea.tmp";
            cmd | getline churl;
            if(churl!="null") {
              print info;
              print churl;
            };
            close(cmd);
          };
        }
        ' ChannelList/Korea.list>IPTV/韩国频道.m3u


    - name: 欧美频道
      if: env.GET == 'true'
      run : |
        wget https://ghproxy.com/https://raw.githubusercontent.com/YanG-1989/m3u/main/Gather.m3u -O en.tmp
        awk '
        {
          if($0~/\"online\"|\"timeout\"/) {m=NR; n=NR+1};
          if(m<=NR && NR<=n) {
            gsub(/ \(.*p\)/,"");
            gsub(/\",/,"\" group-title=\"'"$GROUP_NAME_EN"'\",");
            print $0;
          };
        }
        ' en.tmp>Source/English.m3u
        awk -F'"' '
        {
          info=$0;
          name=$4;
          gsub(/group-title=\"欧美.*\"/, "group-title=\"'"$GROUP_NAME_EN"'\"");
          if($0~/\#EXTM3U/) {print $0};
          if(info~/EXTINF/ && info!~/URLARU/) {
            churl="null";
            close("en.tmp");
            cmd="awk '\''/"name"/{getline;print}'\'' en.tmp";
            cmd | getline churl;
            if(churl!="null") {
              print info;
              print churl;
            };
            close(cmd);
          };
        }
        ' ChannelList/English.list>IPTV/欧美频道.m3u
    

       
        
    - name: 生成AppleTV总列表
      run : |
        cat IPTV/央视卫视.m3u IPTV/本地频道.m3u IPTV/体育频道.m3u IPTV/数字频道.m3u IPTV/香港频道.m3u IPTV/台湾频道.m3u IPTV/日本频道.m3u IPTV/韩国频道.m3u IPTV/欧美频道.m3u IPTV/熊猫频道.m3u > IPTV_ipv6.m3u
    
    - name: 删除临时文件
      run : |
        rm *.tmp
        ls
        
#   - name: 删除临时文件
#      run : |
#        rm *.tmp
#        rm *tmp*
#        ls
        
        
    
    - name: 判断是否有变更
      if: (!cancelled())
      id: status
      run: |
        STR1="nothing to commit, working tree clean"
        STR2="Changes not staged for commit"
        out=$(git status)
        if [[ "$(echo $out | grep "$STR1")" != "" ]]
        then
          echo "STATUS="nochange"" >> $GITHUB_OUTPUT
        fi
        if [[ "$(echo $out | grep "$STR2")" != "" ]]
        then
          echo "STATUS="change"" >> $GITHUB_OUTPUT
        fi
    
    - name: 合并到仓库
      if: (!cancelled())
      run : |
        if [[ "${{steps.status.outputs.STATUS}}" == "change" ]]
        then
          git add .
          git commit -m  "Update:${{steps.date.outputs.DATE}}"
          git push origin main
        fi
    - name: 移除workflow运行
      if: (!cancelled())
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3
        

    - name: Telegram推送
      if: env.TELEGRAM_NOTIFICATION == 'true' && !cancelled()  
      run: |
        if [[ "${{steps.status.outputs.STATUS}}" == "change" ]]
        then
          curl -s "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}&text=${{ env.TELEGRAM_NOTIFICATION_CONTENT }}&parse_mode=HTML"
          # curl -d "text=📺 AppleTVライブチャンネル更新しました！" -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendmessage?chat_id=${{ secrets.TELEGRAM_CHAT_ID }}"
        fi
